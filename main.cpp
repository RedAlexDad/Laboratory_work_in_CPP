// RK_Class_04032022.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.

/*
Вариант 12
Составить описание класса Complex для представления комплексных чисел
с возможностью задания вещественной и мнимой частей числами типа double.

Класс должен содержать:
1.	Конструктор без параметров, в котором в переменные-члены
	создаваемого объекта записывается 0.

2.	Конструктор с двумя параметрами.

3.	Метод изменения значений переменных-членов объекта.

4.	Метод вывода на экран значений переменных-членов объекта в виде ”-5.4 + 3.9i”.


Написать программу тестирования класса:

1.	Создание объекта без параметров, вывод на экран его переменных-членов.

2.	Создание объекта с параметрами, вывод на экран его переменных-членов.

3.	Создание динамического объекта без параметров, вывод на экран его переменных-членов.

4.	Создание динамического объекта с параметрами, вывод на экран его переменных-членов.

5.	Создать массив из объектов класса c разными значениями переменных-членов.

6.	Найти в массиве объект с максимальной суммой его действительной и мнимой части и вывести его на экран.

*/


#include <iostream>
#include "Complex.h"
#pragma warning(disable : 4996)

using namespace std;

int main()
{
    system("chcp 1251 > nul");

    // 1.	Создание объекта без параметров, вывод на экран его переменных-членов.
    cout << "1. Создание объекта без параметров, вывод на экран его переменных-членов." << endl;
    Complex C1;
    C1.show();

    // 2.	Создание объекта с параметрами, вывод на экран его переменных - членов.
    cout << "2. Создание объекта с параметрами, вывод на экран его переменных - членов." << endl;
    Complex C2(-3.14, 1.352);
    C2.show();


    // 3.	Создание динамического объекта без параметров,
    // вывод на экран его переменных - членов.
    cout << "3. Создание динамического объекта без параметров, вывод на экран его переменных - членов." << endl;
    Complex* C3 = new Complex;
    C3->show();


    // 4.	Создание динамического объекта с параметрами,
    // вывод на экран его переменных - членов.
    cout << "4. Создание динамического объекта с параметрами, вывод на экран его переменных - членов." << endl;
    Complex* C4 = new Complex(65.324, -12.454);
    C4->show();

    // 5.	Создать массив из объектов класса
    // c разными значениями переменных - членов.
    cout << "5. Создать массив из объектов класса c разными значениями переменных - членов." << endl;
    int size = 5;
    srand(time(NULL));
    Complex* C5 = new Complex[size];

    for (int i = 0; i < size; i++) {
        // Знакопеременные числа для действительных и мнимых чисел
        // 0  - отрицательное число, 1 - положительное число

        // Для действительных чисел
        if (rand() % 2 == 1) {
            C5[i].set_double_number(((double)rand() / (double)(RAND_MAX * rand() % 100)));
            C5[i].get_double_number();
        }
        else {
            C5[i].set_double_number((-(double)rand() / (double)(RAND_MAX * rand() % 100)));
            C5[i].get_double_number();
        }

        // Для мнимых чисел
        if (rand() % 2 == 1) {
            C5[i].set_imaginary_numbers(((double)rand() / (double)(RAND_MAX * rand() % 100)));
            C5[i].get_imaginary_numbers();
        }
        else {
            C5[i].set_imaginary_numbers((-(double)rand() / (double)(RAND_MAX * rand() % 100)));
            C5[i].get_imaginary_numbers();
        }

        C5[i].show();
    }

    // 6. Найти в массиве объект с максимальной
    // суммой его действительной и мнимой части и вывести его на экран.
    cout << "6. Найти в массиве объект с максимальной суммой его действительной и мнимой части и вывести его на экран." << endl;
    Complex* C6 = new Complex[size];

    double* find_max_value = new double[size];


    for (int i = 0; i < size; i++) {
        // Знакопеременные числа для действительных и мнимых чисел
        // 0  - отрицательное число, 1 - положительное число

        // Для действительных чисел
        if (rand() % 2 == 1) {
            C6[i].set_double_number(((double)rand() / (double)(RAND_MAX * rand() % 100)));
            C6[i].get_double_number();
        }
        else {
            C6[i].set_double_number((-(double)rand() / (double)(RAND_MAX * rand() % 100)));
            C6[i].get_double_number();
        }

        // Для мнимых чисел
        if (rand() % 2 == 1) {
            C6[i].set_imaginary_numbers(((double)rand() / (double)(RAND_MAX * rand() % 100)));
            C6[i].get_imaginary_numbers();
        }
        else {
            C6[i].set_imaginary_numbers((-(double)rand() / (double)(RAND_MAX * rand() % 100)));
            C6[i].get_imaginary_numbers();
        }

        C6[i].show();

        find_max_value[i] = C6[i].get_double_number() + C6[i].get_imaginary_numbers();
        cout << "Сумма действительных и мнимых чисел: " << find_max_value[i] << endl;
        cout << endl << endl;
    }

    int i_max = 0;

    for (int i = 1; i < size; i++) {
        if (find_max_value[i] > find_max_value[i_max]) {
            i_max = i;
        }
    }

    cout << "Сумма максимальнных действительных и мнимых чисел: " << find_max_value[i_max] << endl;
}
